name: Docker Image and NPM Package CI/CD

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/stabgan/openrouter-mcp-multimodal
            stabgan/openrouter-mcp-multimodal
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=sha,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Set build arguments for npm
          build-args: |
            NPM_CONFIG_STRICT_SSL=false
            NPM_CONFIG_REGISTRY=https://registry.npmjs.org/
            NPM_CONFIG_FETCH_RETRY_MINTIMEOUT=20000
            NPM_CONFIG_FETCH_RETRY_MAXTIMEOUT=120000
            NODE_ENV=development

  publish-npm:
    runs-on: ubuntu-latest
    # Only run on tagged versions (v*)
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org/'
      
      - name: Configure npm
        run: |
          npm config set strict-ssl false
          npm config set registry https://registry.npmjs.org/
          npm config set fetch-retry-mintimeout 20000
          npm config set fetch-retry-maxtimeout 120000
      
      - name: Install dependencies
        run: npm cache clean --force && npm install --legacy-peer-deps --no-optional
      
      - name: Build package
        run: npm run build
      
      - name: Publish to NPM
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_TOKEN }}